package ie.turfclub.vetReports.model;
// Generated 12-Nov-2014 16:48:32 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Basic;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * VetReportRandomStableInspectionDetail generated by hbm2java
 */
@Entity
@Table(name = "vet_report_random_stable_inspection_detail", catalog = "vetreports")
public class VetReportRandomStableInspectionDetail implements
		java.io.Serializable {

	
	/**
	 * 
	 */
	private static final long serialVersionUID = -1842101538538317387L;
	private int randomId;
	private VetreportTrainers randomTrainerId;
	private VetreportHorses randomHorseId;
	private Date randomInpsectionDate;
	private VetreportHorsesNotRan randomNotRanYetId;
	private String randomNotRanYetTempId;

	public VetReportRandomStableInspectionDetail() {
	}

	public VetReportRandomStableInspectionDetail(VetreportTrainers randomTrainerId,
			VetreportHorses randomHorseId, Date randomInpsectionDate) {
		this.randomTrainerId = randomTrainerId;
		this.randomHorseId = randomHorseId;
		this.randomInpsectionDate = randomInpsectionDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "random_id", unique = true, nullable = false)
	public int getRandomId() {
		return this.randomId;
	}

	public void setRandomId(int randomId) {
		this.randomId = randomId;
	}

	
	@Basic(optional=false)
	@NotFound(action=NotFoundAction.IGNORE)  
	@OneToOne( optional = false, fetch = FetchType.EAGER)
	@JoinColumn(name = "random_trainer_id" , nullable = false)
	public VetreportTrainers getRandomTrainerId() {
		return this.randomTrainerId;
	}

	public void setRandomTrainerId(VetreportTrainers randomTrainerId) {
		this.randomTrainerId = randomTrainerId;
	}


	@Basic(optional=true)
	@NotFound(action=NotFoundAction.IGNORE)  
	@OneToOne( optional = true, fetch = FetchType.EAGER)
	@JoinColumn(name = "random_horse_id" , nullable = true)
	public VetreportHorses getRandomHorseId() {
		return this.randomHorseId;
	}

	public void setRandomHorseId(VetreportHorses randomHorseId) {
		this.randomHorseId = randomHorseId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "random_inpsection_date", nullable = false)
	public Date getRandomInpsectionDate() {
		return this.randomInpsectionDate;
	}

	public void setRandomInpsectionDate(Date randomInpsectionDate) {
		this.randomInpsectionDate = randomInpsectionDate;
	}

	@Column(name = "random_not_ran_yet_id", nullable = true)
	public VetreportHorsesNotRan getRandomNotRanYetId() {
		return randomNotRanYetId;
	}

	public void setRandomNotRanYetId(VetreportHorsesNotRan randomNotRanYetId) {
		this.randomNotRanYetId = randomNotRanYetId;
	}

	@Transient
	public String getRandomNotRanYetTempId() {
		return randomNotRanYetTempId;
	}

	public void setRandomNotRanYetTempId(String randomNotRanYetTempId) {
		this.randomNotRanYetTempId = randomNotRanYetTempId;
	}



	
	
}
