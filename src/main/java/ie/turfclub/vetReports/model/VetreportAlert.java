package ie.turfclub.vetReports.model;

// default package
// Generated 12-Nov-2014 16:48:32 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * VetreportAlertHorses generated by hbm2java
 */
@Entity
@Table(name = "vetreport_alert", catalog = "vetreports")
public class VetreportAlert implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer alertId;
	private VetreportTrainers alertTrainerId;
	private VetreportHorses alertHorseId;
	private VetreportHorsesNotRan alertHorseHasNotRanId;
	private String alertTempHorseId;

	public VetreportAlert() {

	}

	public VetreportAlert(Integer alertId) {
		this.alertId = alertId;
	}

	
	
	public VetreportAlert(Integer alertId, VetreportTrainers alertTrainerId,
			VetreportHorses alertHorseId,
			VetreportHorsesNotRan alertHorseHasNotRanId, String alertTempHorseId) {
		super();
		this.alertId = alertId;
		this.alertTrainerId = alertTrainerId;
		this.alertHorseId = alertHorseId;
		this.alertHorseHasNotRanId = alertHorseHasNotRanId;
		this.alertTempHorseId = alertTempHorseId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "alert_id", unique = true, nullable = false)
	public Integer getAlertId() {
		return this.alertId;
	}

	public void setAlertId(Integer alertId) {
		this.alertId = alertId;
	}

	
	@Basic(optional=true)
	@NotFound(action=NotFoundAction.IGNORE)  
	@OneToOne( optional = true, fetch = FetchType.EAGER)
	@JoinColumn(name = "alert_horse_id", nullable = true)
	public VetreportHorses getAlertHorseId() {
		
		return this.alertHorseId;
	}

	public void setAlertHorseId(VetreportHorses alertHorseId) {
		
		this.alertHorseId = alertHorseId;
	}

	@Basic(optional=true)
	@NotFound(action=NotFoundAction.IGNORE)  
	@OneToOne( optional = true, fetch = FetchType.EAGER)
	@JoinColumn(name = "alert_trainer_id", nullable = true)
	public VetreportTrainers getAlertTrainerId() {
		
		return alertTrainerId;
	}

	public void setAlertTrainerId(VetreportTrainers alertTrainerId) {
		this.alertTrainerId = alertTrainerId;
	}

	@Basic(optional=true)
	@NotFound(action=NotFoundAction.IGNORE)  
	@OneToOne( optional = true, fetch = FetchType.EAGER)
	@JoinColumn(name = "alert_horse_has_not_ran_id", nullable = true)
	public VetreportHorsesNotRan getAlertHorseHasNotRanId() {
		return alertHorseHasNotRanId;
	}

	public void setAlertHorseHasNotRanId(VetreportHorsesNotRan alertHorseHasNotRanId) {
		this.alertHorseHasNotRanId = alertHorseHasNotRanId;
	}

	@Transient
	public String getAlertTempHorseId() {
		return alertTempHorseId;
	}

	public void setAlertTempHorseId(String alertTempHorseId) {
		this.alertTempHorseId = alertTempHorseId;
	}


	

	

	
	
	


	

}
